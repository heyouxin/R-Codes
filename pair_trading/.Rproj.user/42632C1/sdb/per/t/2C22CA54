{
    "collab_server" : "",
    "contents" : "library(xlsx)\nlibrary(xts)\nlibrary(urca)\nhs300_weights <- read.xlsx(\"./files/hs300_weights_2016.xls\",1,encoding = \"UTF-8\")\n#View(hs300_weights)\nbank_pos<-grep(\".*银行\",hs300_weights$成分股名称_CompoStkNm)\nstock_bank <- hs300_weights[bank_pos,]\n\nstock_price <- read.xlsx(\"./files/QTTN_2016__C30BBEF8B0F_(2).xls\",1,encoding = \"UTF-8\")\nstock_price_1 <- stock_price[stock_price$日期_Date<\"2017-01-01\",]\n\n#在2016年中，找出相关系数最高的两个股票  华夏银行 中信银行 0.89\nresult <- tapply(stock_price_1$收盘价.元._ClPr, list(stock_price_1$日期_Date, stock_price_1$最新股票名称_LStkNm), FUN=sum)\n#View(result)\ncor_table <- cor(result)\n#which.max(na.omit(cor_table[cor_table<1]))\n#View(cor_table)\n\n\nresult <- as.data.frame(result)\nresult <- as.xts(result)\n#View(result)\n\nresult[,c(6,20)]\n# library(PairTrading)\n# .libPaths(\"C:/Program Files/R/R-3.3.3/library\")\n# .libPaths()\n?PairTrading\n\n#留下华夏银行、中信银行的时间序列\nstock_price <- tapply(stock_price$收盘价.元._ClPr, list(stock_price$日期_Date, stock_price$最新股票名称_LStkNm), FUN=sum)\nstock_price <- as.data.frame(stock_price)\nstock_price <- as.xts(stock_price)\nstock_price_HX_ZX <- stock_price[,c(6,20)]\nView(stock_price_HX_ZX)\n\n#形成期协整检验\nformStart <- \"2016-01-01\"\nformEnd <- \"2016-12-31\"\nformPeriod <- paste(formStart,\"::\",formEnd,sep=\"\")\nstock_price_HX_ZX[formPeriod]\n\nstock_price_HX <- stock_price_HX_ZX[formPeriod,1]\nstock_price_ZX <- stock_price_HX_ZX[formPeriod,2]\n\n\n\nlog_HX <- log(stock_price_HX)\n#summary(ur.df(log_HX))\nlog_ZX <- log(stock_price_ZX)\n\nplot(log_HX,ylim=c(1,3),type=\"l\",main=\"对数价格时序图\")\npoints(log_ZX,col=\"red\",pch=20)\nlegend(\"topright\",legend = c(\"华厦银行\",\"中信银行\"),col = c(\"red\",\"black\"),pch=c(20,NA_integer_),lty=c(0,1))\n\nplot.zoo(merge(log_HX,log_ZX),ylim=c(1,3),col = c(\"black\",\"blue\"),main=\"对数价格时序图\")\nclass(log_HX)\nreg <- lm(log_HX~log_ZX)\nsummary(reg)\nalpha <- coef(reg)[1]\nbeta <- coef(reg)[2]\nspreadf <- log_HX-beta*log_ZX-alpha\nUnitRootf <- ur.df(spreadf,type=\"none\")\nsummary(UnitRootf)\nmu <- mean(spreadf)\nsd <- sd(spreadf)\n\ntradeStart <- \"2017-01-01\"\ntradeEnd <- \"2017-06-30\"\ntradePeriod <- paste(tradeStart,\"::\",tradeEnd,sep=\"\")\nprice_HX_trade <- stock_price_HX_ZX[tradePeriod,1]\nprice_ZX_trade <- stock_price_HX_ZX[tradePeriod,2]\n\nCoSpreadT <- log(price_HX_trade)-beta*log(price_ZX_trade)-alpha\nnames(CoSpreadT) <- \"CoSpreadT\"\nsummary(CoSpreadT)\nCoSpreadT <- as.zoo(CoSpreadT)\n\nplot(1:10,family=\"STKaiti\",main=\"中文\") \n#绘制价差区间图\n#library(ggplot2)\nplot(CoSpreadT,ylim=c(-0.20,0.20),main=\"交易期价差序列（协整配对)\")\nabline(h=mu,col=\"black\",lwd=1)\nabline(h=c(mu+0.2*sd,mu-0.2*sd),col=\"blue\",lty=6,lwd=2)\nabline(h=c(mu+1*sd,mu-1*sd),col=\"green\",lty=2,lwd=2.5)\nabline(h=c(mu+2*sd,mu-2*sd),col=\"red\",lty=3,lwd=3)\n\n#构造价差区间\nlevel <- c(mu-2*sd,mu-1*sd,mu-0.2*sd,mu+0.2*sd,mu+1*sd,mu+2*sd)\ninterval <- function(x,level)\n{\n  prcLevel <- cut(x,breaks=c(-Inf,level,Inf))\n  prcLevel <- as.numeric(prcLevel)-4\n}\nprcLevel <- interval(CoSpreadT,level)\n\n#构造交易信号函数\nTradeSig <- function(prcLevel)\n{\n  n <- length(prcLevel)\n  signal <- rep(0,n)\n  for(i in(2:n))\n  {\n    \n    \n    if(prcLevel[i-1]==1 & prcLevel[i]==2)\n      signal[i] <- -2\n    \n    if(prcLevel[i-1]==1 & prcLevel[i]==0)\n      signal[i] <- 2\n    \n\n    #开仓信号  A多   B空\n    if(prcLevel[i-1]==-1 & prcLevel[i]==-2)\n      signal[i] <- 1\n    \n    #平仓信号\n    if(prcLevel[i-1]==-1 & prcLevel[i]==0)\n      signal[i] <- -1\n\n    \n    #止损信号\n    if(prcLevel[i-1]==2 & prcLevel[i]==3)\n      signal[i] <- 3\n        \n    if(prcLevel[i-1]>=-2 & prcLevel[i]==-3)\n      signal[i] <- -3\n    \n    \n    \n    \n  }\n  return (signal)\n}\n\n\nsignal <- TradeSig(prcLevel)\nposition <- c()\nposition[1] <- signal[1]\nns <- length(signal)\nfor (i in 2:ns) \n{\n  position[i] <- position[i-1]\n  \n  if(signal[i]==1)\n    position[i]=1\n  \n  \n  if(signal[i]==-1)\n    position[i]=-1\n  \n  \n  if(signal[i]==-1 & position[i-1]==0)\n    position[i]=0\n  \n  \n  if(position[i-1]==1 & signal[i]==-1)\n    position[i]=0\n  \n  if(position[i-1]==-1 & signal[i]==2)\n    position[i]=0\n  \n  if(signal[i]==3)\n    position[i]=0\n  \n  if(signal[i]==-3)\n    position[i]=0\n  \n}\n\n\n\nposition <- c()\nposition[1] <- 0\nns <- length(prcLevel)\nfor (i in 2:ns) \n{\n  position[i] <- position[i-1]\n  \n  #正向开仓\n  if(position[i]==0 & prcLevel[i]<=-2)\n    position[i]=1\n  \n  #反向开仓\n  if(position[i]==0 & prcLevel[i]>=2)\n    position[i]=-1\n  \n  #平仓信号\n  if(position[i]==1 & prcLevel[i]==0)\n    position[i]=0\n  \n  if(position[i]==1 & prcLevel[i]==-3)\n    position[i]=0\n  \n  \n  if(position[i]==-1 & prcLevel[i]==0)\n    position[i]=0\n  \n  if(position[i]==-1 & prcLevel[i]==3)\n    position[i]=0\n  \n  \n \n  \n}\n\n\nposition <- xts(position,order.by = index(CoSpreadT))\n\n#tail(position)\n\n\nTradeSim <- function(PriceA,PriceB,Position)\n{\n  \n\n  \n  Position2 <- Position\n  n <- length(Position)\n  PriceA <- as.numeric(PriceA)\n  PriceB <- as.numeric(PriceB)\n  Position <- as.numeric(Position)\n  size <- 100\n  #shareA[1] <- 0 \n  shareB <- c()\n  shareA <- size*Position\n  shareB[1] <- (-beta)*shareA[1]*PriceA[1]/PriceB[1]\n  cash <- c()\n  cash[1] <- 10000\n  for (i in 2:n) \n  {\n    #shareA[i] <- shareA[i-1]\n    shareB[i] <- shareB[i-1]\n    cash[i] <- cash[i-1]\n    if(Position[i-1]==0 & Position[i]==1)\n    {\n      \n      shareB[i] <- (-beta)*shareA[i]*PriceA[i]/PriceB[i]\n      cash[i] <- cash[i-1]-(shareA[i]*PriceA[i]+shareB[i]*PriceB[i])\n    }\n    if(Position[i-1]==0 & Position[i]==-1)\n    {\n      \n      shareB[i] <- (-beta)*shareA[i]*PriceA[i]/PriceB[i]\n      cash[i] <- cash[i-1]-(shareA[i]*PriceA[i]+shareB[i]*PriceB[i])\n    }\n    \n    if(Position[i-1]==1 & Position[i]==0)\n    {\n      shareB[i] <- 0\n      cash[i] <- cash[i-1]+(shareA[i-1]*PriceA[i]+shareB[i-1]*PriceB[i])\n    }\n    \n    if(Position[i-1]==-1 & Position[i]==0)\n    {\n      shareB[i] <- 0\n      cash[i] <- cash[i-1]+(shareA[i-1]*PriceA[i]+shareB[i-1]*PriceB[i])\n    }\n    \n\n    \n  }\n  \n  cash <- xts(cash,order.by = index(Position2))\n  shareA <- xts(shareA,order.by=index(Position2))\n  shareB <- xts(shareB,order.by=index(Position2))\n  \n  #length(asset)\n  asset <- cash+shareA*PriceA+shareB*PriceB\n  #account <- cbind(Position,shareA)\n  #View(account)\n  account <- cbind(Position,shareA,shareB,cash,asset)\n  colnames(account) <- c(\"Position\",\"shareA\",\"shareB\",\"cash\",\"asset\")\n  return(account)\n  \n}\n\naccount <- TradeSim(price_HX_trade,price_ZX_trade,position)\n",
    "created" : 1519628873525.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2142612820",
    "id" : "2C22CA54",
    "lastKnownWriteTime" : 1521464070,
    "last_content_update" : 1521464070990,
    "path" : "~/R Codes/pair_trading/main.R",
    "project_path" : "main.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}