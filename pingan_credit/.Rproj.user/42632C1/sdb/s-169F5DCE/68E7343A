{
    "collab_server" : "",
    "contents" : "rm(list=ls())\n###\n\n### 第一版债券违约预警评分卡模型    hyx    2018.7.25\n\n###\nlibrary(pROC)\nlibrary(smbinning)\nlibrary(InformationValue) #这个包有疑问 当全为好样本的时候，坏样本数量也为全部，这样计算避免Inf\n#library(sampling)\ndata <- read.csv(\"final_All_Data_0719_2.csv\")\n\n## 0是违约  1是不违约\ndata$isdefault <- 1\ndata[data$is_default==1,'isdefault'] <- 0\n\n#目前因子不多，手动筛选因子\ndata <- data[,c('code','isdefault','CPI','ChinaNewsBasedEPU','GDP','alpha','belta','belta_yj','belta_yz','consumption','creditspread','finance_1','finance_2','finance_3','finance_4','finance_5','finance_6','finance_7','finance_8','finance_9','finance_10','finance_11','finance_12','finance_13','finance_14','finance_15','listed','bond_type_wind_1','company_type','exchange','industry','province','is_default')]\ndata <- na.omit(data)\n\n#train$ID_unit\ntrain <- strata(data,\"isdefault\",size=c(0.75*nrow(data[data$is_default==0,]),0.75*nrow(data[data$is_default==1,])),\"srswor\")\n###分层抽样，划分训练集、测试集\n# row_default <- sample(data[data$is_default==1,],nrow(data[data$is_default==1,])*0.75,replace = F)  \n# row_Ndefault <- sample(nrow(data[data$is_default==0,]),nrow(data[data$is_default==0,])*0.75,replace = F)  \n# row_train <- c(row_default,row_Ndefault)\nX_train <- na.omit(data[train$ID_unit,])\ny_train <- data[train$ID_unit,\"isdefault\"]\n\nX_test <- data[-train$ID_unit,]\ny_test <- data[-train$ID_unit,'isdefault']\n\n##var_factor \nvar_factor <- c('listed','bond_type_wind_1','company_type','exchange','industry','province')\nsmbinning.eda(X_train)\n#result <- smbinning.factor(X_train,x=\"company_type\",y=\"isdefault\",C(\"''\"))\nresult$ivtable\nX_train$listed_woe <- WOE(as.factor(X_train$listed),as.factor(X_train$isdefault))\nX_train$bond_type_wind_1_woe <- WOE(as.factor(X_train$bond_type_wind_1),as.factor(X_train$isdefault))\nX_train$company_type_woe <- WOE(as.factor(X_train$company_type),as.factor(X_train$isdefault))\nX_train$exchange_woe <- WOE(as.factor(X_train$exchange),as.factor(X_train$isdefault))\nX_train$industry_woe <- WOE(as.factor(X_train$industry),as.factor(X_train$isdefault))\nX_train$province_woe <- WOE(as.factor(X_train$province),as.factor(X_train$isdefault))\n\nwoe_table_factor <- X_train[,c('is_default','listed_woe','bond_type_wind_1_woe','company_type_woe','exchange_woe','industry_woe','province_woe')]\n\nfor (f in var_factor)\n{\n  \n  assign(paste0(\"woetable_\",f),WOETable(as.factor(X_train[,f]),as.factor(X_train$isdefault)))\n\n}\nView(woetable_industry)\nsum(woetable_industry$GOODS)\nsum(woetable_industry$BADS)\n\n#定量变量\nvar_quant <- c('CPI','ChinaNewsBasedEPU','GDP','alpha','belta','belta_yj','belta_yz','consumption','creditspread','finance_1','finance_2','finance_3','finance_4','finance_5','finance_6','finance_7','finance_8','finance_9','finance_10','finance_11','finance_12','finance_13','finance_14','finance_15')\n\n#使用最优分箱的变量\nvar_quant_optimal <- c('alpha' ,'belta' ,'belta_yj'  ,'finance_4' ,'finance_8' ,'finance_9','finance_13')\nfor (q in var_quant_optimal)\n{\n  assign(paste0(\"result_\",q),smbinning(df=X_train,y='isdefault',x=q,p=0.01))\n\n}    \n\n\n#使用定义分组分箱  按分位数\nvar_quant_other <- setdiff(var_quant,var_quant_optimal)\n\n\nfor (q in var_quant_other)\n{\n  per<-as.vector(quantile(X_train[,q],probs=seq(0,1,0.3),na.rm=T))\n  breaks<-per[2:(length(per)-1)]\n  assign(paste0(\"result_\",q),\n         smbinning.custom(df=X_train,y='isdefault',x=q,cuts = breaks))\n\n}\n\nView(result_finance_15$ivtable)\n\n\n##给训练数据定量指标进行WOE转换\nwoe_table_quant <- data.frame()\ni <- 1\nfor (q in var_quant) \n{\n  \n  assign(paste0(q,\"_woe\"),rep(0,nrow(X_train)))\n  woe_table_quant\n  if(i==1)\n  {\n    woe_table_quant <- as.data.frame(get(paste0(q,\"_woe\")))\n    i <- i+1\n  }\n  else\n  {\n    woe_table_quant <- cbind(woe_table_quant,get(paste0(q,\"_woe\")))\n    \n  }\n  colnames(woe_table_quant)[i] <- paste0(q,\"_woe\")\n  \n  # assign(paste0(q,\"_woe\"),rep(0,nrow(X_train)))\n  # woe_table_quant$get(paste0(q,\"_woe\")) <- rep(0,nrow(X_train)) \n  # woe_table_quant <- cbind(woe_table_quant,get(paste0(q,\"_woe\")))\n  # \n}\n\n\n##计算WOE\nfor (i in 1:length(var_quant)) \n{\n  q <- var_quant[i]\n  result <- get(paste0(\"result_\",q))\n  #result$cuts\n  for (j in 1:nrow(X_train)) \n  {\n    if(length(result$cuts)==1)\n    {\n      if(X_train[j,q]<=result$cuts[1])\n      {\n        woe_table_quant[j,i] <- result$ivtable['WoE'][[1]][1]\n      }\n      \n      if(X_train[j,q]>result$cuts[1])\n      {\n        woe_table_quant[j,i] <- result$ivtable['WoE'][[1]][2]\n        \n        \n      }\n      \n\n      #遇上woe值为inf，预留处理\n      if(woe_table_quant[j,i]==Inf)\n      {\n        woe_table_quant[j,i]=10\n      }\n    }\n    \n    \n    \n    if(length(result$cuts)==2)\n    {\n      if(X_train[j,q]<=result$cuts[1])\n      {\n        woe_table_quant[j,i] <- result$ivtable['WoE'][[1]][1]\n      }\n      \n      if((X_train[j,q]>result$cuts[1]) & (X_train[j,q]<=result$cuts[2]))\n      {\n        woe_table_quant[j,i] <- result$ivtable['WoE'][[1]][2]\n        \n        \n      }\n      \n      \n      if(X_train[j,q]>result$cuts[2])\n      {\n        woe_table_quant[j,i] <- result$ivtable['WoE'][[1]][3]\n        \n        \n      }\n      \n      #遇上woe值为inf，预留处理\n      if(woe_table_quant[j,i]==Inf)\n      {\n        woe_table_quant[j,i]=10\n      }\n    }\n    \n    if(length(result$cuts)==3)\n    {\n      if(X_train[j,q]<=result$cuts[1])\n      {\n        woe_table_quant[j,i] <- result$ivtable['WoE'][[1]][1]\n      }\n      \n      if((X_train[j,q]>result$cuts[1]) & (X_train[j,q]<=result$cuts[2]))\n      {\n        woe_table_quant[j,i] <- result$ivtable['WoE'][[1]][2]\n      }\n      \n      \n      if((X_train[j,q]>result$cuts[2])&(X_train[j,q]<=result$cuts[3]))\n      {\n        woe_table_quant[j,i] <- result$ivtable['WoE'][[1]][3]\n      }\n      \n      if(X_train[j,q]>result$cuts[3])\n      {\n        woe_table_quant[j,i] <- result$ivtable['WoE'][[1]][4]\n      }\n      \n      #遇上woe值为inf，预留处理\n      if(woe_table_quant[j,i]==Inf)\n      {\n        woe_table_quant[j,i]=10\n      }\n    }\n    \n    \n  }\n  \n}\n\n\n\nmodel_data <- cbind(woe_table_factor,woe_table_quant)\nlogr <- glm(is_default~.,data=model_data,family = binomial)\npredicted_ori <- predict(logr,type = 'response')\nsummary(logr)\nmodelroc <- roc(model_data$is_default,predicted_ori)\nplot(modelroc,print.auc=TRUE,auc.polygon=TRUE,grid=c(0.1,0.1),grid.col=c(\"green\",\"red\"),max.auc.polygon=TRUE,auc.polygon.col=\"skyblue\",print.thres=TRUE)\nks_plot(model_data$is_default,predicted_ori)\n##计算得分 \nA_B <- function(basepoints,baseodds,pdo)\n{\n  beta <- pdo/log(2)\n  alpha <- basepoints+beta*log(baseodds)\n  return(list(A=alpha,B=beta))\n}\nx <- A_B(600,1,20)\nx\ncof <- logr$coefficients\nbasepoint <- round(x$A-x$B*cof[1],1)\nbasepoint\n\n\nmodel_data <- cbind(model_data,\"code\"=X_train[,'code'])\nmodel_data$score <- x$A-x$B*log(predicted_ori/(1-predicted_ori))\nmodel_data$PD <- predicted_ori\nmodel_data2 <- model_data[order(-model_data$PD),]\nView(model_data2[,c('code','is_default','PD','score')])\n",
    "created" : 1532003196494.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4175967639",
    "id" : "68E7343A",
    "lastKnownWriteTime" : 1532509728,
    "last_content_update" : 1532510389387,
    "path" : "~/R Codes/pingan_credit/creditCard.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}