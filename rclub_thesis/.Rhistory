library(xlsx)
data1 <- read.xlsx("data.xls",1)
data1 <- read.csv("data1.csv")
data1 <- read.csv("data1.csv")
data1 <- read.xlsx("data.xls",1,encoding = "UTF-8")
View(data1)
melt(data1)
library(melt)
install.packages("melt")
install.packages("melt")
library(melt)
stack(data1)
data2 <- stack(data1)
View(data2)
View(data1)
data2 <- stack(data1[,4:13])
View(data2)
install.packages("reshape2")
library(reshape2)
melt(data1)
data2 <- melt(data1)
melt(data1)
data2 <- melt(data1)
data2 <- melt(data1)
data2 <- melt(data1)
View(data2)
View(data1)
colnames(data1)
colnames(data1)[4:13]
c(1:10)
colnames(data1)[4:13] <- c(1:10)
colnames(data1)
data2 <- melt(data1,id.vars = c("No","Treated","classify"),variable.name = "Time",value.name = "Stock_con")
View(data2)
data2[,'Year'] <- 0
data2[data2['Time']>5,'Year'] <- 1
data2['Time']>5
data2[,'Time']>5
data2[,'Year']
data2[,'Time']
data2[,'Time']>5
as.character(data2[,'Time'])>5
data2[as.character(data2[,'Time'])>5,'Year'] <- 1
View(data2)
as.character(data2[,'Time'])>5
as.character(data2[,'Time'])
data2[as.integer(data2[,'Time'])>5,'Year'] <- 1
View(data2)
alpha_beta <- function(basepoints,baseodds,pdo)
{
beta <- pdo/log(2)
alpha <- basepoints+beta*log(baseodds)
return(list(alpha=alpha,beta=beta))
}
x <- alpha_beta(600,1,20)
x
View(data2)
getwd()
View(data2)
library(xlsx)
library(reshape2)
data1 <- read.xlsx("数据筛选.xlsx",1,encoding = "UTF-8")
data2 <- stack(data1[,4:13])
View(data2)
data2 <- stack(data1[,5:13])
View(data2)
data2 <- melt(data1,id.vars = c("No","Treated","classify"),variable.name = "Time",value.name = "Stock_con")
View(data2)
data2 <- stack(data1[,5:13])
colnames(data1)[4:13] <- c(1:10)
data2 <- melt(data1,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "Stock_con")
colnames(data1)[5:13] <- c(1:10)
View(data1)
data1 <- read.xlsx("数据筛选.xlsx",1,encoding = "UTF-8")
View(data1)
data2 <- stack(data1[,5:26])
colnames(data1)[5:26] <- c(1:22)
View(data2)
View(data2)
data2 <- melt(data1,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "Stock_con")
View(data2)
data <- read.xlsx("数据筛选.xlsx",1,encoding = "UTF-8")
seq(5:26,2)
seq(5,26,2)
data1 <- data[,c(1,2,3,4,seq(5,26,2))]
View(data1)
data2 <- data[,c(1,2,3,4,seq(6,26,2))]
View(data2)
data2 <- na.omit(data[,c(1,2,3,4,seq(6,26,2))])
data2 <- data[,c(1,2,3,4,seq(6,26,2))]
View(data2)
data2 <- na.omit(data[,c(1,2,3,4,seq(6,26,2))],1)
data2 <- na.omit(data[,c(1,2,3,4,seq(6,26,2))],2)
data2 <- na.omit(data[,c(1,2,3,4,seq(6,26,2))],0)
data2 <- data[,c(1,2,3,4,seq(6,26,2))][,-15]
View(data2)
data1 <- data[,c(1,2,3,4,seq(5,26,2))][,-15]
data2 <- data[,c(1,2,3,4,seq(6,26,2))][,-15]
View(data1)
colnames(data1)[5:14] <- c(1:10)
colnames(data2)[5:14] <- c(1:10)
data1 <- melt(data1,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "Stock_con")
data2 <- melt(data2,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "Trade_exp")
View(data1)
View(data2)
View(data1)
data_all <- merge(data1,data2)
View(data_all)
data_all[,'Year'] <- 0
data_all[as.integer(data_all[,'Time'])>5,'Year'] <- 1
View(data_all)
data <- read.xlsx("数据筛选.xlsx",2,encoding = "UTF-8")
#data2 <- stack(data1[,5:26])
data1 <- data[,c(1,2,3,4,seq(5,26,2))][,-15]
data2 <- data[,c(1,2,3,4,seq(6,26,2))][,-15]
colnames(data1)[5:14] <- c(1:10)
colnames(data2)[5:14] <- c(1:10)
data1 <- melt(data1,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "Stock_con")
data2 <- melt(data2,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "Trade_exp")
data_all_2 <- merge(data1,data2)
data_all_2[,'Year'] <- 0
data_all_2[as.integer(data_all[,'Time'])>5,'Year'] <- 1
View(data)
View(data1)
View(data2)
View(data)
data1 <- data[,c(1,2,3,4,seq(5,26,2))][,-15]
data2 <- data[,c(1,2,3,4,seq(6,26,2))][,-15]
data1 <- melt(data1,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "Stock_con")
data2 <- melt(data2,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "Trade_exp")
data_all_2 <- merge(data1,data2)
data_all_2[,'Year'] <- 0
data_all_2[as.integer(data_all[,'Time'])>5,'Year'] <- 1
data_all_2 <- merge(data1,data2)
View(data1)
data_all_2 <- merge(data1,data2)
View(data1)
data <- read.xlsx("数据筛选.xlsx",2,encoding = "UTF-8")
View(data)
data1 <- data[,c(1,2,3,4,seq(5,26,2))][,-15]
data2 <- data[,c(1,2,3,4,seq(6,26,2))][,-15]
View(data1)
colnames(data1)[5:14] <- c(1:10)
colnames(data2)[5:14] <- c(1:10)
View(data1)
data1 <- melt(data1,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "Stock_con")
View(data1)
data2 <- melt(data2,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "Trade_exp")
data_all_2 <- merge(data1,data2)
View(data_all_2)
data_all_2[,'Year'] <- 0
data_all_2[as.integer(data_all[,'Time'])>5,'Year'] <- 1
data_all <- rbind(data_all,data_all_2)
View(data_all_2)
data_all_2[,'Year'] <- 0
data_all_2[as.integer(data_all_2[,'Time'])>5,'Year'] <- 1
data_all <- rbind(data_all,data_all_2)
View(data_all)
write.xlsx(data_all,"data_reg_DID.xlsx")
data <- read.xlsx("数据筛选.xlsx",3,encoding = "UTF-8")
View(data2)
View(data_all_2)
data1 <- data[,c(1,2,3,4,seq(5,26,2))][,-15]
data2 <- data[,c(1,2,3,4,seq(6,26,2))][,-15]
colnames(data1)[5:14] <- c(1:10)
colnames(data2)[5:14] <- c(1:10)
data1 <- melt(data1,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "WBBL")
data2 <- melt(data2,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "Trade_exp")
data_all_3 <- merge(data1,data2)
data_all_3[,'Year'] <- 0
data_all_3[as.integer(data_all_2[,'Time'])>5,'Year'] <- 1
data_all_panal <- rbind(data_all_2,data_all_3)
write.xlsx(data_all_panal,"data_reg_panal.xlsx")
data1 <- data[,c(1,2,3,4,seq(5,26,2))][,-15]
View(data)
data1 <- data[,c(1,2,3,4,seq(5,23,2))]
data2 <- data[,c(1,2,3,4,seq(6,23,2))]
colnames(data1)[5:14] <- c(1:10)
colnames(data2)[5:14] <- c(1:10)
View(data1)
View(data2)
View(data1)
colnames(data2)[5:14] <- c(1:10)
View(data2)
View(data1)
View(data2)
View(data)
data1 <- data[,c(1,2,3,seq(4,23,2))]
data2 <- data[,c(1,2,3,seq(5,23,2))]
View(data1)
View(data)
data <- read.xlsx("数据筛选.xlsx",3,encoding = "UTF-8")
data1 <- data[,c(1,2,3,seq(4,23,2))]
data2 <- data[,c(1,2,3,seq(5,23,2))]
View(data1)
colnames(data1)[5:14] <- c(1:10)
data1 <- data[,c(1,2,3,seq(4,23,2))]
colnames(data1)[4:13] <- c(1:10)
colnames(data2)[4:13] <- c(1:10)
View(data1)
data1 <- melt(data1,id.vars = c("No","Treated","classify"),variable.name = "Time",value.name = "WBBL")
data2 <- melt(data2,id.vars = c("No","Treated","classify"),variable.name = "Time",value.name = "Trade_exp")
View(data1)
data_all_3 <- merge(data1,data2)
data_all_3[,'Year'] <- 0
data_all_3[as.integer(data_all_2[,'Time'])>5,'Year'] <- 1
data_all_3[as.integer(data_all_3[,'Time'])>5,'Year'] <- 1
View(data_all_3)
View(data_all_2)
data_all_panal <- merge(data_all_2,data_all_3)
View(data_all_panal)
write.xlsx(data_all_panal,"data_reg_panal.xlsx")
getwd()
data <- read.csv("file:///C:/Users/heyouxin/Desktop/qw.csv")
data <- read.csv("C:/Users/heyouxin/Desktop/qw.csv")
data <- read.csv2("C:/Users/heyouxin/Desktop/qw.csv")
library(randomforest)
getwd()
install.packages("arules")
install.packages("arulesViz")
library(arules)  #加载 arules 包
library(arulesViz)
data = read.transactions('datafor4.txt',format="single",sep='\t',cols=c(1,2),rm.duplicates=TRUE)
inspect(data[1:5])
set.seed(12)
n= dim(data)[1]
index = sample(n*0.7,replace=FALSE)
train = data[index]
test = data[-index]
summary(train)
# way1 整体关联
rules <- apriori(data = train,parameter = list(support = 0.008,confidence = 0.15,minlen = 2))
summary(rules)
## lift排序之后的规则
inspect(sort(rules,by="lift")[1:10])
subrules <- subset(rules,items %in% "妇女权益")  # items 表明与出现在规则的任何位置的项进行匹配，为了将子集限制到匹配只发生在左侧或者右侧位置上，可以使用lhs或者rhs代替
subrules
inspect(subrules[1:2])
plot(rules, measure = c("support", "lift"), shading = "confidence")
plot(x=subrules,method="graph")
#  检验参考 https://blog.csdn.net/yepeng2007fei/article/details/78910105
##此行报错，先检验train
qualityMeasures <- interestMeasure(rules, method=c("coverage","fishersExactTest","conviction"), transactions=train)
summary(qualityMeasures)
quality(groceryrules) <- cbind(quality(rules), qualityMeasures)
inspect(head(sort(rules, by = "conviction", decreasing = F)))
getwd()
getwd()\
data_csv = read.csv('062.csv')
data_csv = read.csv('062.csv')
data_csv = read.csv2('062.csv')
df_csv <- read.csv('063_3.csv')
View(df_csv)
df_csv <- read.csv('063_2.csv')
df_csv <- read.csv('062_2.csv')
df_csv <- read.csv('063_3.csv')
View(df_csv)
library(xlsx)
library(reshape2)
data <- read.xlsx("数据筛选.xlsx",1,encoding = "UTF-8")
colnames(data1)[5:14] <- c(1:10)
data1 <- data[,c(1,2,3,4,seq(5,26,2))][,-15]
colnames(data1)[5:14] <- c(1:10)
View(data1)
View(data1)
View(data1)
View(data1)
data1 <- melt(data1,id.vars = c("No","Treated","classify","edu"),variable.name = "Time",value.name = "Stock_con")
View(data1)
View(data1)
