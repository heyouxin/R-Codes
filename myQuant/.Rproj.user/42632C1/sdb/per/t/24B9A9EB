{
    "collab_server" : "",
    "contents" : "MACD_BackTest<-function(short_period,long_period,dea_period)\n{\n  Stock_macd<-macd(BackTestSample,short_period,long_period,\n                   dea_period)\n  Stock<-BackTestSample\n  stock_return<-NULL\n  #  初始资金设为10000\n  initial_money<-10000\n  n<-length(BackTestSample)\n  dynamic_money<-c(initial_money,rep(0,n-1))\n  cash_money<-c(initial_money,rep(0,n-1))\n  static_money<-c(initial_money,rep(0,n-1))\n  margin_ratio<-0.08\n  cost_ratio<-0.003\n  in_price<-NULL\n  out_price<-NULL\n  one_return<-NULL\n  market_pos<-0\n  cost_in<-NULL\n  cost_out<-NULL\n  margin_call_money<-rep(0,n)\n  margin_put_money<-rep(0,n)\n  #  ####交易的开始####\n  #  #############注意dynamic_money#############\n  #  #############注意market_pos的编程情况#############\n  for (i in 2:n) {\n    #  ####先判断入仓的情况####\n    #  ####先判断入仓的情况####\n    if (market_pos==0) {\n      if (Stock_macd[i-1]<0 && Stock_macd[i]>=0) {\n        in_price<-Stock[i]\n        cost_in<-in_price*cost_ratio\n        market_pos<-1\n        dynamic_money[i]<-dynamic_money[i-1]-cost_in\n        static_money[i]<-static_money[i-1]\n        cash_money[i]<-cash_money[i-1]-cost_in-\n          in_price*margin_ratio-in_price\n        margin_call_money[i]<-in_price*margin_ratio\n      } else if (Stock_macd[i-1]>0 && Stock_macd[i]<=0) {\n        in_price<-Stock[i]\n        cost_in<-in_price*cost_ratio\n        market_pos<--1\n        dynamic_money[i]<-dynamic_money[i-1]-cost_in\n        static_money[i]<-static_money[i-1]\n        cash_money[i]<-cash_money[i-1]-cost_in-\n          in_price*margin_ratio+in_price  \n        margin_put_money[i]<-in_price*margin_ratio\n      } else {\n        dynamic_money[i]<-dynamic_money[i-1]\n        cash_money[i]<-cash_money[i-1]\n        static_money[i]<-static_money[i-1]\n        market_pos<-0\n      }\n    } else if (market_pos==1) {\n      #  ####再判断平仓的情况####\n      #  ####再判断平仓的情况####\n      if (Stock_macd[i-1]>0 && Stock_macd[i]<=0) {\n        out_price<-Stock[i]\n        cost_out<-out_price*cost_ratio\n        market_pos<-0\n        dynamic_money[i]<-dynamic_money[i-1]+(out_price-Stock[i-1])-\n          cost_out\n        one_return<-out_price-in_price-cost_in-cost_out\n        stock_return<-c(stock_return,one_return)\n        static_money[i]<-static_money[i-1]+one_return\n        cash_money[i]<-cash_money[i-1]-cost_out+margin_call_money[i-1]+\n          out_price\n        #  ####再空头入仓####\n        if (i!=n) {\n          market_pos<--1\n          in_price<-Stock[i]\n          cost_in<-in_price*cost_ratio\n          dynamic_money[i]<-dynamic_money[i]-cost_in\n          static_money[i]<-static_money[i]\n          cash_money[i]<-cash_money[i]-cost_in+in_price-\n            in_price*margin_ratio\n          margin_put_money[i]<-in_price*margin_ratio\n        }\n      } else {\n        market_pos<-1\n        dynamic_money[i]<-dynamic_money[i-1]+Stock[i]-Stock[i-1]\n        static_money[i]<-static_money[i-1]\n        cash_money[i]<-cash_money[i-1]+\n          margin_ratio*(Stock[i]-Stock[i-1])\n        margin_call_money[i]<-margin_call_money[i-1]-\n          margin_ratio*(Stock[i]-Stock[i-1])\n      }\n    } else if (market_pos==-1) {\n      if (Stock_macd[i-1]<0 && Stock_macd[i]>=0) {\n        out_price<-Stock[i]\n        cost_out<-out_price*cost_ratio\n        market_pos<-0\n        dynamic_money[i]<-dynamic_money[i-1]-out_price+Stock[i-1]-\n          cost_out\n        one_return<-in_price-out_price-cost_out-cost_in\n        stock_return<-c(stock_return,one_return)\n        static_money[i]<-static_money[i-1]+one_return\n        cash_money[i]<-cash_money[i-1]-cost_out+\n          margin_put_money[i-1]-out_price\n        #  ####再多头入仓####\n        if (i!=n) {\n          market_pos<-1\n          in_price<-Stock[i]\n          cost_in<-in_price*cost_ratio\n          dynamic_money[i]<-dynamic_money[i]-cost_in\n          static_money[i]<-static_money[i]\n          cash_money[i]<-cash_money[i]-\n            cost_in-in_price*margin_ratio-in_price\n          margin_call_money[i]<-in_price*margin_ratio\n        }\n      } else {\n        market_pos<--1\n        dynamic_money[i]<-dynamic_money[i-1]-Stock[i]+Stock[i-1]\n        static_money[i]<-static_money[i-1]\n        cash_money[i]<-cash_money[i-1]+\n          margin_ratio*(Stock[i-1]-Stock[i])\n        margin_put_money[i]<-margin_put_money[i-1]-\n          margin_ratio*(Stock[i-1]-Stock[i])\n      }\n    }\n    if (i==n) {\n      if (market_pos==1) {\n        out_price<-Stock[i]\n        market_pos<-0\n        cost_out<-out_price*margin_ratio\n        dynamic_money[i]<-dynamic_money[i-1]+out_price-Stock[i-1]-\n          cost_out\n        one_return<-out_price-in_price-cost_out-cost_in\n        stock_return<-c(stock_return,one_return)\n        static_money[i]<-static_money[i-1]+one_return\n        cash_money[i]<-cash_money[i-1]-cost_out+out_price+\n          margin_call_money[i-1]\n      }\n      if (market_pos==-1) {\n        out_price<-Stock[i]\n        market_pos<-0\n        cost_out<-out_price*margin_ratio\n        dynamic_money[i]<-dynamic_money[i-1]-out_price+Stock[i-1]-\n          cost_out\n        one_return<-in_price-out_price-cost_out-cost_in\n        stock_return<-c(stock_return,one_return)\n        static_money[i]<-static_money[i-1]+one_return\n        cash_money[i]<-cash_money[i-1]-cost_out-out_price+\n          margin_put_money[i-1]\n      }\n    }\n  }\n  #  构建回测结果返回值\n  Answer<-list()\n  #  动态资金曲线\n  Answer$Dynamic<-dynamic_money\n  #  静态资金曲线\n  Answer$Static<-static_money\n  Answer$Cash<-cash_money\n  return(Answer)\n}",
    "created" : 1513609910304.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2087196644",
    "id" : "24B9A9EB",
    "lastKnownWriteTime" : 1513604219,
    "last_content_update" : 1513604219,
    "path" : "C:/Users/heyouxin/Desktop/MACD_GUI/MACD_GUI/MACD_BackTest.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}